@page "/analyze"
@using PleasureCare.Data
@inject IJSRuntime JSRuntime

<p>分析結果</p>
<ul class="nav nav-tabs" id="chartTabs" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="ToshoraderChart-tab" data-bs-toggle="tab" data-bs-target="#ToshoraderChart-container" type="button" role="tab" aria-controls="ToshoraderChart-container" aria-selected="false">東商式スケール分析</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="TosholineChart-tab" data-bs-toggle="tab" data-bs-target="#TosholineChart-container" type="button" role="tab" aria-controls="TosholineChart-container" aria-selected="true">健康観察分析</button>
    </li>
</ul>
<div class="tab-content" id="chartTabsContent">
    <div class="tab-pane fade show active" id="TosholineChart-container" role="tabpanel" aria-labelledby="TosholineChart-tab">
        <div class="chart-container">
            <div style="width: 300px;">
                <p>不足しがちな栄養素の推定必要摂取量と推定摂取量の比率</p>
                <canvas id="eiyoChart"></canvas>
                <p>日々の睡眠時間の推移</p>
                <canvas id="SuiminChart"></canvas>
                <p>日々の歩数の推移</p>
                <canvas id="HosuuChart"></canvas>
                
            </div>
        </div>
    </div>
    <div class="tab-pane fade" id="ToshoraderChart-container" role="tabpanel" aria-labelledby="ToshoraderChart-tab">
        <div class="chart-container">
            <div style="width: 300px;">
                <h6>東商式スケール</h6>
                <p>分野ごとの満点との比率</p>
                <canvas id="ToshoraderChart"></canvas>
                <p>点数の推移</p>
                <canvas id="TosholineChart"></canvas>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
    const JsonData = [];
    const sleeptimes = [];
    
    function receveJson(json){
        jsonData = JSON.parse(json);
        console.debug(json);
    }
    
    function drawgraphs(){
        renderEiyoChart();
        renderSuiminTimeChart();
        renderHosuuChart();
        renderTosholineChart();
        renderToshoraderChart();
    }
    
    function renderHosuuChart() {
        renderChart(
            {
                type: "bar",
                data: {
                    labels: ["7/1","7/2","7/3","7/4","7/5","7/6","7/7","7/8","7/92","7/10","7/11","7/12","7/13","7/14","7/15"],
                    datasets: [
                        {
                            label:"",
                            data: [228,130,372,262,376,221,350,860,475,542,382,401,526,123,451,],
                            backgroundColor: [
                                "rgba(54, 162, 235, 0.9)"
                            ],
                            borderWidth: 1
                        }
                    ]
                },
                options: {
                    plugins: {
                    legend: {
                        display:false
                    },
                    title: {
                        display:false
                        }
                    },
                    scales: {
                        yAxes: [{
                            ticks: {
                                min: 0, // 最小値
                            }
                        }]
                    }
                }
        }
            , "HosuuChart");
    }
    
    function renderSuiminTimeChart() {
    
        var sleepData = [
            { sleep: moment('2024-08-01T23:00:00'), wake: moment('2024-08-02T07:00:00') },
            { sleep: moment('2024-08-02T23:30:00'), wake: moment('2024-08-03T06:30:00') },
            { sleep: moment('2024-08-03T23:00:00'), wake: moment('2024-08-04T07:00:00') },
            { sleep: moment('2024-08-04T21:30:00'), wake: moment('2024-08-05T05:20:00') },
            { sleep: moment('2024-08-05T21:50:00'), wake: moment('2024-08-06T06:00:00') },
            { sleep: moment('2024-08-07T03:20:00'), wake: moment('2024-08-07T06:50:00') },
            { sleep: moment('2024-08-08T01:20:00'), wake: moment('2024-08-08T09:50:00') },
            { sleep: moment('2024-08-08T22:45:00'), wake: moment('2024-08-09T05:20:00') },
            { sleep: moment('2024-08-09T23:50:00'), wake: moment('2024-08-10T05:30:00') },
            // 他の日付のデータ...
        ];
        var chartData = sleepData.map(function (item, index) {
            return {
                x: item.wake.format("MM月DD日"),
                y: item.sleep.valueOf(),
                y2: item.wake.valueOf()
            };
        });
        const data = {
            labels: chartData.map(item => item.x),
            datasets:[{
                label: '睡眠時間',
                data: chartData.map(item => 
                    (item.y2 - item.y) / (1000 * 60 * 60)  // ミリ秒を時間に変換
                ),
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1,
                fill:true
            }]
        };
    
        const config = {
            type: 'line',
            data: data,
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        display: false,
                    },
                    title: {
                        display: false,
                    },
                },
                scales:{
                    y:{
                        min:0,
                        max:12,
                        ticks:{
                            stepSize:2
                        }
                    }
                }
            },
        };

        renderChart(config,"SuiminChart");
        console.debug(data);
    }

    function renderEiyoChart() {
        renderChart(
           {
                type: "radar",
                data: {
                    labels: ["タンパク質", "食物繊維", "ビタミンB6", "ビタミンB12", "鉄分", "亜鉛","カルシウム","塩分"],
                        // ÷55 ÷18.5 ÷1.25 ÷2.4 ÷7 ÷9 ÷650 ÷6.5
                    datasets: [
                        {
                            label: "推定必要栄養素",
                            data: [1,1,1,1,1,1,1,1],
                            backgroundColor: [
                                "rgba(0, 0, 0, 0)"
                            ],
                            borderColor: [
                                "rgba(255, 99, 132, 0.7)"
                            ],
                            borderWidth: 1
                        },
                        {
                            label: "あなたの推定摂取栄養素",
                            data: [0.9,0.8,0.91,1.01,0.98,0.86,0.65,1.1],
                            backgroundColor: [
                                "rgba(54, 162, 235, 0.2)"
                            ],
                            borderColor: [
                                "rgba(54, 162, 235, 1)"
                            ],
                            borderWidth: 1
                        }
                    ]
                },
                options: {
                    scales:{
                        r:{
                            min:0,
                            max:1.2,
                        }
                    },
                }
            }
            , "eiyoChart");
    }

    function renderTosholineChart() {
        
        const data = {
            labels: ["４月","５月","６月","７月","８月","９月"],
            datasets:[{
                label: '点数の推移',
                data: [18,15,16,14,19,20],
                backgroundColor: 'rgba(255, 99, 132, 0.2)',
                borderColor: 'rgba(255, 99, 132, 1)',
                borderWidth: 1,
            }]
        };

        const config = {
            type: 'line',
            data: data,
            options: {
                responsive: true,
                scales:{
                    y:{
                        max:21,
                    }
                }
            },
        };

        renderChart(config,"TosholineChart");
    }

    function renderToshoraderChart() {
        renderChart(
            {
                type: "radar",
                data: {
                    labels: ["日時の見当識","単語の記銘","計算","数字の逆唱","言葉の遅延再生","言葉の流暢性"],
                        // ÷４　÷3　÷3　÷１　÷3　÷5
                    datasets: [
                        {
                            label: "",
                            data: [1,1,0.67,1,0.67,0.6],
                            backgroundColor: [
                                "rgba(255, 99, 132, 0.2)"
                            ],
                            borderColor: [
                                "rgba(255, 99, 132, 0.8)"
                            ],
                            borderWidth: 1
                        }
                    ]
                },
                options: {
                    plugins: {
                        legend: {
                            display: false,
                        },
                        title: {
                            display: false,
                        },
                    },
                    scales:{
                        r:{
                            min:0,
                            max:1
                        }
                    }
                }
            }
            , "ToshoraderChart");
    }
    

</script>

@code {
    [CascadingParameter]
    private ShareValues? ShareValues { get; set; }
    private readonly HttpClient client = new HttpClient();

    protected override async Task OnInitializedAsync()
    {
        string url = $"https://api.schnetworks.net/v1/vital-info.php?uuid={ShareValues.value.uuid}";
        string json = await client.GetStringAsync(url);

        await JSRuntime.InvokeVoidAsync("receveJson", json);
    }

}