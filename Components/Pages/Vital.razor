@page "/vital"
@using PleasureCare.Data
@using MeCab
@inject NavigationManager NavigationManager

<div style="@((MarkupString)sw_form)">
    <p>身長</p>
    <div class="row mb-3">
        <div class="input-group">
            <input type="text" class="form-control form-control-lg" id="shintyoBox" placeholder="身長" @bind="tall" />
            <label class="input-group-text">cm</label>
        </div>
    </div>

    <p>体重</p>
    <div class="row mb-3">
        <div class="input-group">
            <input type="text" class="form-control form-control-lg" id="taijuBox" placeholder="体重" @bind="weight" />
            <label class="input-group-text">Kg</label>
        </div>
    </div>
    <!-----
        毎朝記録するやつ
    ----->
    <p>就寝時間</p>
    <div class="row mb-3">
        <div class="input-group">
            <select class="form-control form-control-lg" id="syuusinHour" @bind="gotobedh">
                <option value="" disabled selected>時</option>
                @for (int i = 0; i < 24; i++)
                {
                    <option value="@i.ToString("00")">@i</option>
                }
            </select>
            <label class="input-group-text">時</label>
            <select class="form-control form-control-lg" id="syuusinMinute" @bind="gotobedm">
                <option value="" disabled selected>分</option>
                @for (int i = 0; i < 60; i += 5)
                {
                    <option value="@i.ToString("00")">@i.ToString("00")</option>
                }
            </select>
            <label class="input-group-text">分</label>
        </div>
    </div>

    <p>起床時間</p>
    <div class="row mb-3">
        <div class="input-group">
            <select class="form-control form-control-lg" id="kisyouHour" @bind="wakeuph">
                <option value="" disabled selected>時</option>
                @for (int i = 0; i < 24; i++)
                {
                    <option value="@i.ToString("00")">@i</option>
                }
            </select>
            <label class="input-group-text">時</label>
            <select class="form-control form-control-lg" id="kisyouMinute" @bind="wakeupm">
                <option value="" disabled selected>分</option>
                @for (int i = 0; i < 60; i += 5)
                {
                    <option value="@i.ToString("00")">@i.ToString("00")</option>
                }
            </select>
            <label class="input-group-text">分</label>
        </div>
    </div>
    <!-----
        毎晩記録するやつ
    ----->
    <p>歩数</p>
    <div class="row mb-3">
        <div class="input-group">
            <input type="text" class="form-control form-control-lg" id="hosuuBox" placeholder="歩数" @bind="steps" />
            <label class="input-group-text">歩</label>
        </div>
    </div>

    <p>食事内容</p>
    <div class="row mb-3">
        <textarea class="form-control" id="syokuziBox" rows="3" placeholder="ここに食べたもの(料理名)を入力してください" @bind="eatgohan"></textarea>
    </div>

</div>
@((MarkupString)message)

<a href="/" style="@((MarkupString)backbutton); background-color: #005d64" class="btn btn-primary">ホームに戻る</a>
<div class="row mt-5">
    <div class="d-flex justify-content-end">
        <input style="@((MarkupString)sw_form); background-color: #005d64" type="button" class="btn link-light col-4 " value="送信" @onclick="ResultSender" />
    </div>
</div>
<!-----
    サイズ調整
----->
<script>
    function scrollIntoView(element) {
        element.scrollIntoView({ behavior: 'smooth', block: 'center' });
    }
</script>


@code {
    string weight;
    string tall;
    string steps;
    string wakeuph;
    string wakeupm;
    string gotobedh;
    string gotobedm;
    string message;
    string sw_form;
    string eatgohan;
    string backbutton = "display: none";

    private readonly HttpClient client = new HttpClient();

    [CascadingParameter]
    private ShareValues? ShareValues { get; set; }

    private async void ResultSender() //送信
    {
        Dictionary<string, string> vds = new Dictionary<string, string>()
        {
            { "uuid", ShareValues.value.uuid},
            { "weight",weight},
            { "tall",tall},
            { "steps", steps},
            { "gotobed",gotobedh + ":" + gotobedm},
            { "wakeup",wakeuph + ":" + wakeupm},
            { "eatgohan",eatgohan},
            {"senddate",DateTime.Now.ToString("yyyy-MM-dd")}
        };
        HttpResponseMessage resp = await client.PostAsync("https://api.schnetworks.net/v1/vital-info.php", new FormUrlEncodedContent(vds)).ConfigureAwait(false);
        string json = await resp.Content.ReadAsStringAsync();
        AccountService.OtherAccountRoot? js_l = JsonConvert.DeserializeObject<AccountService.OtherAccountRoot>(json);
        if (js_l != null)
        {
            if (js_l.RespInfo.Code == 200)
            {
                message = "<p class='alert alert-success'>データの送信に成功しました！</p>";
                sw_form = "display: none";
                backbutton = "";
            }

        }
        await InvokeAsync(StateHasChanged);
    }
}
